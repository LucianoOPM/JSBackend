//.map()

El método .map() funciona para modificar un array dado los valores que se le otorguen. El método puede tener 3 párametros, el primer párametro son cada uno de los valores que incluye el array.
Y el segundo párametro es la posicion del indice donde se encuentra el valor otorgado.
Por ejemplo: 

    let x = [1,2,3,4,5,6]
    let test = x.map((valores, posicion)=>valores)
    console.log(test)//1,2,3,4,5,6
    let test = x.map((valores, posicion)=>posicion)
    console.log(test)//0,1,2,3,4,5

Los logs anteriores muestran lo que son los valores los cuales son una secuencia de numeros del 1 al 6 y el segundo log muestra la posicion en la que se encuentra, los cuales como ya se sabe
en JS los objetos comienzan a contarse desde el 0.
Si solo le damos un parametro al método map, no sería posible acceder a la posicion de los valores, ya que el segundo párametro es el que se encarga de esto.

Si modificaramos los valores que se encuentran en el array, los que nos arrojaría la consola, sería:

    let test = x.map((valores)=> valores * 2)
    console.log(test) //2,4,6,8,10,12

En el log anterior se puede ver como dentro del método map, modificamos los valores multiplicandolos por 2, esto no modifica el array original.

En resumen, el método .map() es una forma útil de transformar y manipular los elementos de un array en un nuevo array de forma fácil y rápida.

//.includes()
El método includes funciona para buscar en un array ciertos valores que se le otorgan dentro de la función, devuelve true si encontró el valor que se le dió a buscar y devuelve false si no lo 
encuentra

    let nombres = ["Ana", "Sheyla", "Fer"]
    let buscar = nombres.includes("Ana")
    console.log(buscar)//true
    buscar = nombres.includes("Xavier")
    console.log(buscar)//false

Es importante recalcar que este método verifica la igualdad estrictamente ("==="), o sea que si no se respetan las letras tal como están escritas en el string, este devolverá un false. Por ejemplo:

    buscar = nombres.includes("fer")
    console.log(buscar)//false

En el ejemplo anterior, el método de busqueda devuelve false ya que no se respetan las mayusculas en la busqueda del nombre.También cabe aclarar que al ser igualdad estricta, no sirve para buscar
palabras inconclusas.

    buscar = nombres.includes("yla")
    console.log(buscar)//false

//Spread operator
